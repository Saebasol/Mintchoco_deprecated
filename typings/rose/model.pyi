"""
This type stub file was generated by pyright.
"""

from typing import Any, Iterator, Optional

class HeliotropeFile:
    def __init__(self, **file: Any) -> None: ...
    def to_dict(self) -> dict[str, Any]: ...
    @property
    def width(self) -> str: ...
    @property
    def hash(self) -> str: ...
    @property
    def haswebp(self) -> Optional[bool]: ...
    @property
    def hasavifsmalltn(self) -> Optional[bool]: ...
    @property
    def name(self) -> str: ...
    @property
    def height(self) -> str: ...
    @property
    def hasavif(self) -> Optional[bool]: ...
    @classmethod
    def parsing_generator(
        cls, value_datas: dict[str, list[dict[str, str]]], key: str
    ) -> Iterator[HeliotropeFile]: ...

class HeliotropeValueData:
    def __init__(self, **tag: Any) -> None: ...
    def to_dict(self) -> dict[str, Any]: ...
    @property
    def value(self) -> str: ...
    @property
    def url(self) -> str: ...

class HeliotropeImage:
    def __init__(self, **image: Any) -> None: ...
    def to_dict(self) -> dict[str, Any]: ...
    @property
    def filename(self) -> str: ...
    @property
    def url(self) -> str: ...

class HeliotropeGalleryInfo:
    def __init__(self, **data: Any) -> None: ...
    def to_dict(self) -> dict[str, Any]: ...
    @property
    def status(self) -> int: ...
    @property
    def language_localname(self) -> str: ...
    @property
    def language(self) -> str: ...
    @property
    def date(self) -> str: ...
    @property
    def files(self) -> Iterator[HeliotropeFile]: ...
    @property
    def tags(self) -> Iterator[HeliotropeValueData]: ...
    @property
    def japanese_title(self) -> Optional[str]: ...
    @property
    def title(self) -> str: ...
    @property
    def id(self) -> str: ...
    @property
    def type(self) -> str: ...

class HeliotropeInfo:
    def __init__(self, **data: Any) -> None: ...
    def to_dict(self) -> dict[str, Any]: ...
    @property
    def status(self) -> int: ...
    @property
    def title(self) -> HeliotropeValueData: ...
    @property
    def galleryid(self) -> str: ...
    @property
    def thumbnail(self) -> str: ...
    @property
    def artist(self) -> Iterator[HeliotropeValueData]: ...
    @property
    def group(self) -> Iterator[HeliotropeValueData]: ...
    @property
    def type(self) -> HeliotropeValueData: ...
    @property
    def language(self) -> HeliotropeValueData: ...
    @property
    def series(self) -> Iterator[HeliotropeValueData]: ...
    @property
    def characters(self) -> Iterator[HeliotropeValueData]: ...
    @property
    def tags(self) -> Iterator[HeliotropeValueData]: ...

class HeliotropeList:
    def __init__(self, **data: Any) -> None: ...
    def to_dict(self) -> dict[str, Any]: ...
    @property
    def status(self) -> int: ...
    @property
    def list(self) -> Iterator[HeliotropeInfo]: ...

class HeliotropeImages:
    def __init__(self, **data: Any) -> None: ...
    def to_dict(self) -> dict[str, Any]: ...
    @property
    def status(self) -> int: ...
    @property
    def images(self) -> Iterator[HeliotropeImage]: ...

class HeliotropeRankingInfo:
    def __init__(self, **data: Any) -> None: ...
    @property
    def index(self) -> str: ...
    @property
    def count(self) -> int: ...

class HeliotropeRanking:
    def __init__(self, **data: Any) -> None: ...
    @property
    def count(self) -> int: ...
    @property
    def ranking(self) -> HeliotropeRankingInfo: ...
    @property
    def month(self) -> int: ...
